<?php
/**
 * FullWorkflowRequest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  SigniFlowConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * SigniFlow OpenAPI Spec v1
 *
 * ## SigniFlow API used to automate esignature workflow creation and management.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace SigniFlowConnect\Model;

use \ArrayAccess;
use \SigniFlowConnect\ObjectSerializer;

/**
 * FullWorkflowRequest Class Doc Comment
 *
 * @category Class
 * @description #### Request a fullworkflow of a document.
 * @package  SigniFlowConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class FullWorkflowRequest implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'FullWorkflowRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'additional_data_field' => 'string',
        'auto_remind_field' => '\SigniFlowConnect\Model\AutoRemind',
        'custom_message_field' => 'string',
        'doc_field' => 'string',
        'doc_name_field' => 'string',
        'due_date_field' => 'string',
        'extension_field' => '\SigniFlowConnect\Model\DocExtension',
        'flatten_document_field' => 'bool',
        'keep_content_security_field' => 'bool',
        'keep_custom_properties_field' => 'bool',
        'keep_xmp_metadata_field' => 'bool',
        'portfolio_information_field' => '\SigniFlowConnect\Model\FullWorkflowRequestPortfolioInformationField',
        'priority_field' => 'float',
        'sla_field' => 'float',
        'send_first_email_field' => 'bool',
        'send_workflow_emails_field' => 'bool',
        'token_field' => '\SigniFlowConnect\Model\TokenField',
        'workflow_users_list_field' => '\SigniFlowConnect\Model\FullWorkflowRequestWorkflowUsersListField[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'additional_data_field' => null,
        'auto_remind_field' => null,
        'custom_message_field' => null,
        'doc_field' => null,
        'doc_name_field' => null,
        'due_date_field' => null,
        'extension_field' => null,
        'flatten_document_field' => null,
        'keep_content_security_field' => null,
        'keep_custom_properties_field' => null,
        'keep_xmp_metadata_field' => null,
        'portfolio_information_field' => null,
        'priority_field' => null,
        'sla_field' => null,
        'send_first_email_field' => null,
        'send_workflow_emails_field' => null,
        'token_field' => null,
        'workflow_users_list_field' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'additional_data_field' => 'AdditionalDataField',
        'auto_remind_field' => 'AutoRemindField',
        'custom_message_field' => 'CustomMessageField',
        'doc_field' => 'DocField',
        'doc_name_field' => 'DocNameField',
        'due_date_field' => 'DueDateField',
        'extension_field' => 'ExtensionField',
        'flatten_document_field' => 'FlattenDocumentField',
        'keep_content_security_field' => 'KeepContentSecurityField',
        'keep_custom_properties_field' => 'KeepCustomPropertiesField',
        'keep_xmp_metadata_field' => 'KeepXMPMetadataField',
        'portfolio_information_field' => 'PortfolioInformationField',
        'priority_field' => 'PriorityField',
        'sla_field' => 'SLAField',
        'send_first_email_field' => 'SendFirstEmailField',
        'send_workflow_emails_field' => 'SendWorkflowEmailsField',
        'token_field' => 'TokenField',
        'workflow_users_list_field' => 'WorkflowUsersListField'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'additional_data_field' => 'setAdditionalDataField',
        'auto_remind_field' => 'setAutoRemindField',
        'custom_message_field' => 'setCustomMessageField',
        'doc_field' => 'setDocField',
        'doc_name_field' => 'setDocNameField',
        'due_date_field' => 'setDueDateField',
        'extension_field' => 'setExtensionField',
        'flatten_document_field' => 'setFlattenDocumentField',
        'keep_content_security_field' => 'setKeepContentSecurityField',
        'keep_custom_properties_field' => 'setKeepCustomPropertiesField',
        'keep_xmp_metadata_field' => 'setKeepXmpMetadataField',
        'portfolio_information_field' => 'setPortfolioInformationField',
        'priority_field' => 'setPriorityField',
        'sla_field' => 'setSlaField',
        'send_first_email_field' => 'setSendFirstEmailField',
        'send_workflow_emails_field' => 'setSendWorkflowEmailsField',
        'token_field' => 'setTokenField',
        'workflow_users_list_field' => 'setWorkflowUsersListField'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'additional_data_field' => 'getAdditionalDataField',
        'auto_remind_field' => 'getAutoRemindField',
        'custom_message_field' => 'getCustomMessageField',
        'doc_field' => 'getDocField',
        'doc_name_field' => 'getDocNameField',
        'due_date_field' => 'getDueDateField',
        'extension_field' => 'getExtensionField',
        'flatten_document_field' => 'getFlattenDocumentField',
        'keep_content_security_field' => 'getKeepContentSecurityField',
        'keep_custom_properties_field' => 'getKeepCustomPropertiesField',
        'keep_xmp_metadata_field' => 'getKeepXmpMetadataField',
        'portfolio_information_field' => 'getPortfolioInformationField',
        'priority_field' => 'getPriorityField',
        'sla_field' => 'getSlaField',
        'send_first_email_field' => 'getSendFirstEmailField',
        'send_workflow_emails_field' => 'getSendWorkflowEmailsField',
        'token_field' => 'getTokenField',
        'workflow_users_list_field' => 'getWorkflowUsersListField'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['additional_data_field'] = $data['additional_data_field'] ?? null;
        $this->container['auto_remind_field'] = $data['auto_remind_field'] ?? null;
        $this->container['custom_message_field'] = $data['custom_message_field'] ?? null;
        $this->container['doc_field'] = $data['doc_field'] ?? null;
        $this->container['doc_name_field'] = $data['doc_name_field'] ?? null;
        $this->container['due_date_field'] = $data['due_date_field'] ?? null;
        $this->container['extension_field'] = $data['extension_field'] ?? null;
        $this->container['flatten_document_field'] = $data['flatten_document_field'] ?? null;
        $this->container['keep_content_security_field'] = $data['keep_content_security_field'] ?? null;
        $this->container['keep_custom_properties_field'] = $data['keep_custom_properties_field'] ?? null;
        $this->container['keep_xmp_metadata_field'] = $data['keep_xmp_metadata_field'] ?? null;
        $this->container['portfolio_information_field'] = $data['portfolio_information_field'] ?? null;
        $this->container['priority_field'] = $data['priority_field'] ?? null;
        $this->container['sla_field'] = $data['sla_field'] ?? null;
        $this->container['send_first_email_field'] = $data['send_first_email_field'] ?? null;
        $this->container['send_workflow_emails_field'] = $data['send_workflow_emails_field'] ?? null;
        $this->container['token_field'] = $data['token_field'] ?? null;
        $this->container['workflow_users_list_field'] = $data['workflow_users_list_field'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['additional_data_field'] === null) {
            $invalidProperties[] = "'additional_data_field' can't be null";
        }
        if ((mb_strlen($this->container['additional_data_field']) < 1)) {
            $invalidProperties[] = "invalid value for 'additional_data_field', the character length must be bigger than or equal to 1.";
        }

        if ($this->container['auto_remind_field'] === null) {
            $invalidProperties[] = "'auto_remind_field' can't be null";
        }
        if ($this->container['custom_message_field'] === null) {
            $invalidProperties[] = "'custom_message_field' can't be null";
        }
        if ((mb_strlen($this->container['custom_message_field']) < 1)) {
            $invalidProperties[] = "invalid value for 'custom_message_field', the character length must be bigger than or equal to 1.";
        }

        if ($this->container['doc_field'] === null) {
            $invalidProperties[] = "'doc_field' can't be null";
        }
        if ((mb_strlen($this->container['doc_field']) < 1)) {
            $invalidProperties[] = "invalid value for 'doc_field', the character length must be bigger than or equal to 1.";
        }

        if ($this->container['doc_name_field'] === null) {
            $invalidProperties[] = "'doc_name_field' can't be null";
        }
        if ((mb_strlen($this->container['doc_name_field']) < 1)) {
            $invalidProperties[] = "invalid value for 'doc_name_field', the character length must be bigger than or equal to 1.";
        }

        if ($this->container['due_date_field'] === null) {
            $invalidProperties[] = "'due_date_field' can't be null";
        }
        if ((mb_strlen($this->container['due_date_field']) < 1)) {
            $invalidProperties[] = "invalid value for 'due_date_field', the character length must be bigger than or equal to 1.";
        }

        if ($this->container['extension_field'] === null) {
            $invalidProperties[] = "'extension_field' can't be null";
        }
        if ($this->container['flatten_document_field'] === null) {
            $invalidProperties[] = "'flatten_document_field' can't be null";
        }
        if ($this->container['keep_content_security_field'] === null) {
            $invalidProperties[] = "'keep_content_security_field' can't be null";
        }
        if ($this->container['keep_custom_properties_field'] === null) {
            $invalidProperties[] = "'keep_custom_properties_field' can't be null";
        }
        if ($this->container['keep_xmp_metadata_field'] === null) {
            $invalidProperties[] = "'keep_xmp_metadata_field' can't be null";
        }
        if ($this->container['portfolio_information_field'] === null) {
            $invalidProperties[] = "'portfolio_information_field' can't be null";
        }
        if ($this->container['priority_field'] === null) {
            $invalidProperties[] = "'priority_field' can't be null";
        }
        if ($this->container['sla_field'] === null) {
            $invalidProperties[] = "'sla_field' can't be null";
        }
        if ($this->container['send_first_email_field'] === null) {
            $invalidProperties[] = "'send_first_email_field' can't be null";
        }
        if ($this->container['send_workflow_emails_field'] === null) {
            $invalidProperties[] = "'send_workflow_emails_field' can't be null";
        }
        if ($this->container['token_field'] === null) {
            $invalidProperties[] = "'token_field' can't be null";
        }
        if ($this->container['workflow_users_list_field'] === null) {
            $invalidProperties[] = "'workflow_users_list_field' can't be null";
        }
        if ((count($this->container['workflow_users_list_field']) < 1)) {
            $invalidProperties[] = "invalid value for 'workflow_users_list_field', number of items must be greater than or equal to 1.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets additional_data_field
     *
     * @return string
     */
    public function getAdditionalDataField()
    {
        return $this->container['additional_data_field'];
    }

    /**
     * Sets additional_data_field
     *
     * @param string $additional_data_field Additional data.
     *
     * @return self
     */
    public function setAdditionalDataField($additional_data_field)
    {

        if ((mb_strlen($additional_data_field) < 1)) {
            throw new \InvalidArgumentException('invalid length for $additional_data_field when calling FullWorkflowRequest., must be bigger than or equal to 1.');
        }

        $this->container['additional_data_field'] = $additional_data_field;

        return $this;
    }

    /**
     * Gets auto_remind_field
     *
     * @return \SigniFlowConnect\Model\AutoRemind
     */
    public function getAutoRemindField()
    {
        return $this->container['auto_remind_field'];
    }

    /**
     * Sets auto_remind_field
     *
     * @param \SigniFlowConnect\Model\AutoRemind $auto_remind_field auto_remind_field
     *
     * @return self
     */
    public function setAutoRemindField($auto_remind_field)
    {
        $this->container['auto_remind_field'] = $auto_remind_field;

        return $this;
    }

    /**
     * Gets custom_message_field
     *
     * @return string
     */
    public function getCustomMessageField()
    {
        return $this->container['custom_message_field'];
    }

    /**
     * Sets custom_message_field
     *
     * @param string $custom_message_field Custom message.
     *
     * @return self
     */
    public function setCustomMessageField($custom_message_field)
    {

        if ((mb_strlen($custom_message_field) < 1)) {
            throw new \InvalidArgumentException('invalid length for $custom_message_field when calling FullWorkflowRequest., must be bigger than or equal to 1.');
        }

        $this->container['custom_message_field'] = $custom_message_field;

        return $this;
    }

    /**
     * Gets doc_field
     *
     * @return string
     */
    public function getDocField()
    {
        return $this->container['doc_field'];
    }

    /**
     * Sets doc_field
     *
     * @param string $doc_field Document field.
     *
     * @return self
     */
    public function setDocField($doc_field)
    {

        if ((mb_strlen($doc_field) < 1)) {
            throw new \InvalidArgumentException('invalid length for $doc_field when calling FullWorkflowRequest., must be bigger than or equal to 1.');
        }

        $this->container['doc_field'] = $doc_field;

        return $this;
    }

    /**
     * Gets doc_name_field
     *
     * @return string
     */
    public function getDocNameField()
    {
        return $this->container['doc_name_field'];
    }

    /**
     * Sets doc_name_field
     *
     * @param string $doc_name_field Document name.
     *
     * @return self
     */
    public function setDocNameField($doc_name_field)
    {

        if ((mb_strlen($doc_name_field) < 1)) {
            throw new \InvalidArgumentException('invalid length for $doc_name_field when calling FullWorkflowRequest., must be bigger than or equal to 1.');
        }

        $this->container['doc_name_field'] = $doc_name_field;

        return $this;
    }

    /**
     * Gets due_date_field
     *
     * @return string
     */
    public function getDueDateField()
    {
        return $this->container['due_date_field'];
    }

    /**
     * Sets due_date_field
     *
     * @param string $due_date_field Document due date.
     *
     * @return self
     */
    public function setDueDateField($due_date_field)
    {

        if ((mb_strlen($due_date_field) < 1)) {
            throw new \InvalidArgumentException('invalid length for $due_date_field when calling FullWorkflowRequest., must be bigger than or equal to 1.');
        }

        $this->container['due_date_field'] = $due_date_field;

        return $this;
    }

    /**
     * Gets extension_field
     *
     * @return \SigniFlowConnect\Model\DocExtension
     */
    public function getExtensionField()
    {
        return $this->container['extension_field'];
    }

    /**
     * Sets extension_field
     *
     * @param \SigniFlowConnect\Model\DocExtension $extension_field extension_field
     *
     * @return self
     */
    public function setExtensionField($extension_field)
    {
        $this->container['extension_field'] = $extension_field;

        return $this;
    }

    /**
     * Gets flatten_document_field
     *
     * @return bool
     */
    public function getFlattenDocumentField()
    {
        return $this->container['flatten_document_field'];
    }

    /**
     * Sets flatten_document_field
     *
     * @param bool $flatten_document_field Flatten document.
     *
     * @return self
     */
    public function setFlattenDocumentField($flatten_document_field)
    {
        $this->container['flatten_document_field'] = $flatten_document_field;

        return $this;
    }

    /**
     * Gets keep_content_security_field
     *
     * @return bool
     */
    public function getKeepContentSecurityField()
    {
        return $this->container['keep_content_security_field'];
    }

    /**
     * Sets keep_content_security_field
     *
     * @param bool $keep_content_security_field Keep content security.
     *
     * @return self
     */
    public function setKeepContentSecurityField($keep_content_security_field)
    {
        $this->container['keep_content_security_field'] = $keep_content_security_field;

        return $this;
    }

    /**
     * Gets keep_custom_properties_field
     *
     * @return bool
     */
    public function getKeepCustomPropertiesField()
    {
        return $this->container['keep_custom_properties_field'];
    }

    /**
     * Sets keep_custom_properties_field
     *
     * @param bool $keep_custom_properties_field Keep custom properties.
     *
     * @return self
     */
    public function setKeepCustomPropertiesField($keep_custom_properties_field)
    {
        $this->container['keep_custom_properties_field'] = $keep_custom_properties_field;

        return $this;
    }

    /**
     * Gets keep_xmp_metadata_field
     *
     * @return bool
     */
    public function getKeepXmpMetadataField()
    {
        return $this->container['keep_xmp_metadata_field'];
    }

    /**
     * Sets keep_xmp_metadata_field
     *
     * @param bool $keep_xmp_metadata_field Keep XMP meta data.
     *
     * @return self
     */
    public function setKeepXmpMetadataField($keep_xmp_metadata_field)
    {
        $this->container['keep_xmp_metadata_field'] = $keep_xmp_metadata_field;

        return $this;
    }

    /**
     * Gets portfolio_information_field
     *
     * @return \SigniFlowConnect\Model\FullWorkflowRequestPortfolioInformationField
     */
    public function getPortfolioInformationField()
    {
        return $this->container['portfolio_information_field'];
    }

    /**
     * Sets portfolio_information_field
     *
     * @param \SigniFlowConnect\Model\FullWorkflowRequestPortfolioInformationField $portfolio_information_field portfolio_information_field
     *
     * @return self
     */
    public function setPortfolioInformationField($portfolio_information_field)
    {
        $this->container['portfolio_information_field'] = $portfolio_information_field;

        return $this;
    }

    /**
     * Gets priority_field
     *
     * @return float
     */
    public function getPriorityField()
    {
        return $this->container['priority_field'];
    }

    /**
     * Sets priority_field
     *
     * @param float $priority_field Document priority.
     *
     * @return self
     */
    public function setPriorityField($priority_field)
    {
        $this->container['priority_field'] = $priority_field;

        return $this;
    }

    /**
     * Gets sla_field
     *
     * @return float
     */
    public function getSlaField()
    {
        return $this->container['sla_field'];
    }

    /**
     * Sets sla_field
     *
     * @param float $sla_field SLA
     *
     * @return self
     */
    public function setSlaField($sla_field)
    {
        $this->container['sla_field'] = $sla_field;

        return $this;
    }

    /**
     * Gets send_first_email_field
     *
     * @return bool
     */
    public function getSendFirstEmailField()
    {
        return $this->container['send_first_email_field'];
    }

    /**
     * Sets send_first_email_field
     *
     * @param bool $send_first_email_field Confirm first user email notification will or will not be sent.
     *
     * @return self
     */
    public function setSendFirstEmailField($send_first_email_field)
    {
        $this->container['send_first_email_field'] = $send_first_email_field;

        return $this;
    }

    /**
     * Gets send_workflow_emails_field
     *
     * @return bool
     */
    public function getSendWorkflowEmailsField()
    {
        return $this->container['send_workflow_emails_field'];
    }

    /**
     * Sets send_workflow_emails_field
     *
     * @param bool $send_workflow_emails_field Confirm that workflow emails will or will not be sent.
     *
     * @return self
     */
    public function setSendWorkflowEmailsField($send_workflow_emails_field)
    {
        $this->container['send_workflow_emails_field'] = $send_workflow_emails_field;

        return $this;
    }

    /**
     * Gets token_field
     *
     * @return \SigniFlowConnect\Model\TokenField
     */
    public function getTokenField()
    {
        return $this->container['token_field'];
    }

    /**
     * Sets token_field
     *
     * @param \SigniFlowConnect\Model\TokenField $token_field token_field
     *
     * @return self
     */
    public function setTokenField($token_field)
    {
        $this->container['token_field'] = $token_field;

        return $this;
    }

    /**
     * Gets workflow_users_list_field
     *
     * @return \SigniFlowConnect\Model\FullWorkflowRequestWorkflowUsersListField[]
     */
    public function getWorkflowUsersListField()
    {
        return $this->container['workflow_users_list_field'];
    }

    /**
     * Sets workflow_users_list_field
     *
     * @param \SigniFlowConnect\Model\FullWorkflowRequestWorkflowUsersListField[] $workflow_users_list_field List of users in the workflow.
     *
     * @return self
     */
    public function setWorkflowUsersListField($workflow_users_list_field)
    {


        if ((count($workflow_users_list_field) < 1)) {
            throw new \InvalidArgumentException('invalid length for $workflow_users_list_field when calling FullWorkflowRequest., number of items must be greater than or equal to 1.');
        }
        $this->container['workflow_users_list_field'] = $workflow_users_list_field;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


