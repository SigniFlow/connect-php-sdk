<?php
/**
 * WorkFlowApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  SigniFlowConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * SigniFlow OpenAPI Spec v1
 *
 * ## SigniFlow API used to automate esignature workflow creation and management.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace SigniFlowConnect\Test\Api;

use \SigniFlowConnect\Configuration;
use \SigniFlowConnect\ApiException;
use \SigniFlowConnect\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * WorkFlowApiTest Class Doc Comment
 *
 * @category Class
 * @package  SigniFlowConnect
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class WorkFlowApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createWorkflow
     *
     * Create Workflow.
     *
     */
    public function testCreateWorkflow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDocument
     *
     * Get Document.
     *
     */
    public function testGetDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postAddWorkflowStep
     *
     * Add a Workflow step.
     *
     */
    public function testPostAddWorkflowStep()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postCancelFlow
     *
     * Cancel Flow.
     *
     */
    public function testPostCancelFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postDeleteDoc
     *
     * Delete Document.
     *
     */
    public function testPostDeleteDoc()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postDocPrepperAddField
     *
     * Document Prepper Add Fields.
     *
     */
    public function testPostDocPrepperAddField()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postDocPrepperAdvancedFields
     *
     * Document Prepper Add Advanced Fields.
     *
     */
    public function testPostDocPrepperAdvancedFields()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postFullWorkflow
     *
     * FullWorkflow.
     *
     */
    public function testPostFullWorkflow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postGetDocStatus
     *
     * Get Document Status.
     *
     */
    public function testPostGetDocStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postInitiateFlow
     *
     * Initiate Flow.
     *
     */
    public function testPostInitiateFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postInitiateFlowNoEmail
     *
     * Initiate Flow No Email.
     *
     */
    public function testPostInitiateFlowNoEmail()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postInitiateFlowNoInitialEmail
     *
     * Initiate Flow No Initial Email.
     *
     */
    public function testPostInitiateFlowNoInitialEmail()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postWorkflowSign
     *
     * Workflow Sign.
     *
     */
    public function testPostWorkflowSign()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
